
bandit1
boJ9jbbUNNfktd78OOpsqOltutMc3MY1

bandit2
CV1DtqXWVFXTvM2F0k09SHz0YwRINYA9

bandit3
UmHadQclWmgdLOKQ3YNgjWxGoRMb5luK

bandit4
pIwrPrtPN36QITSp3EQaw936yaFoFgAB

bandit5
koReBOKuIDDepwhWk7jZC0RTdopnAYKh

bandit6
DXjZPULLxYr17uwoI01bNLQbtFemEgo7

bandit7
HKBPTKQnIay4Fw76bEy8PVxKEDQRKTzs

bandit8
cvX2JJa4CFALtqS87jk27qwqGhBM9plV

bandit9
UsvVyFSfZZWbi6wgC7dAFyFuR6jQQUhR

bandit10
truKLdjsbJ5g7yyJ2X2R0o3a5HQJFuLk

bandit11
IFukwKGsFW8MOq3IRFqrxE1hxTNEbUPR

bandit12
5Te8Y4drgCRfCx8ugdwuEX8KFC6k2EUu
solved using: cat data.txt | tr [a-zA-Z] [n-za-mN-ZA-M]

bandit13
8ZjyCRiBWFYkneahHwxCv3wb2a1ORpYL
solved using xxd, gzip, bzip2, and a lot of tar.

bandit14
4wcYUJFw0k0XLShlDzztnTBHiqxU3b3e

bandit15
BfMYroe26WYalil77FoDi9qh59eK5xNr
solved by pasting the password into nc.
solved using: nc localhost 30000

bandit16
cluFn7wTiGryunymYOu4RcffSxQluehd
solved using: openssl s_client -ign_eof -connect localhost:30001
notes: the ign-eof prevents the connection from shutting down after a character (normally every keystroke is send directly it seems). The s_client command is a test feature of openssl and is really nice.

bandit17
xLYVMN9WE5zQ5vHacb0sZEVqbrp7nBTn
Solved using: bandit 17 key (using ssh {host} {post} -i {file}
notes: This involves some portrange scanning and the trying out of the ports using the method seen in bandit16, the scanning was simply nmap -p 31000-32000.
The key is in the file bandit17

bandit18
kfBf3eYk5BPBRzwjqutbbfE887SVc5Yd
solved using: diff passwords.old passwords.new

bandit19
IueksS7Ubh8G3DCwVzrTd8rAVOwq3M5x
solved using: ssh, I simply added the command cat readme to the end which is then executed directly.

bandit20
GbKksEFF4yrVs6il55v6gwY5aVje5f0j
solved using: ./bandit20-do cat /etc/bandit_pass/bandit20

bandit21
gE269g2h3mw3pwgrj0Ha9Uoqen1c9DGr
solved using: simply set nc -l 1111, ran the script on port 1111, used tmux to have two sessions

bandit22
Yk7owGAcWjwMVRwrTesJEwB7WVOiILLI
notes: found a cronjob that was running a file that posted the password to: /tmp/t7O6lds9S0RqQh9aMcz6ShpAoZKF7fgv

bandit23
jc1udXuA1tiHqjIsL8yaapX5XIAI6i0n
== notes ==
again it was a cronjob one, the cronjob was getting the username and using the md5 sum with some algorithm to create the filename to store the password so I ran the command:
> echo I am user bandit23 | md5sum | cut -d ' ' -f 1
< 8169b67bd894ddbb4412f91573b38db3
and then simply:
> cat /tmp/8169b67bd894ddbb4412f91573b38db3

bandit24
